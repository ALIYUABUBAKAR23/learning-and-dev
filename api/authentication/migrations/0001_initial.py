# Generated by Django 3.2.6 on 2022-08-05 09:18

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('sex', models.CharField(blank=True, choices=[('Male', 'male'), ('Female', 'female')], max_length=10)),
                ('state_of_origin', models.CharField(blank=True, choices=[('Abia', 'abia'), ('Adamawa', 'adamawa'), ('Akwa Ibom', 'akwa Ibom'), ('Anambra', 'anambra'), ('Bauchi', 'bauchi'), ('Bayelsa', 'bayelsa'), ('Benue', 'benue'), ('Borno', 'borno'), ('Cross River', 'cross river'), ('Delta', 'delta'), ('Ebonyi', 'ebonyi'), ('Edo', 'edo'), ('Ekiti', 'ekiti'), ('Enugu', 'enugu'), ('Gombe', 'gombe'), ('Imo', 'imo'), ('Jigawa', 'jigawa'), ('Kaduna', 'kaduna'), ('Kano', 'kano'), ('Katsina', 'katsina'), ('Kebbi', 'kebbi'), ('Kogi', 'kogi'), ('Kwara', 'kwara'), ('Lagos', 'lagos'), ('Nasarawa', 'nasarawa'), ('Niger', 'niger'), ('Ogun', 'ogun'), ('Ondo', 'ondo'), ('Osun', 'osun'), ('Oyo', 'oyo'), ('Plateau', 'plateau'), ('Rivers', 'rivers'), ('Sokoto', 'sokoto'), ('Taraba', 'taraba'), ('Yobe', 'yobe'), ('Zamfara', 'zamfara')], max_length=20)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('phone_no', models.CharField(blank=True, max_length=14)),
                ('twitter', models.CharField(blank=True, max_length=50, null=True)),
                ('tnstagram', models.CharField(blank=True, max_length=50, null=True)),
                ('linkedIn', models.CharField(blank=True, max_length=50, null=True)),
                ('staff_id', models.CharField(blank=True, max_length=50, null=True)),
                ('commencement_date', models.DateField(blank=True, max_length=200)),
                ('salary', models.IntegerField(blank=True)),
                ('role', models.CharField(blank=True, max_length=200, null=True)),
                ('contract', models.CharField(blank=True, max_length=200, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_account', models.CharField(blank=True, max_length=20, null=True)),
                ('spouse_name', models.CharField(blank=True, max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_married', models.BooleanField(default=False, help_text='Designates whether the user is married or not.', verbose_name='marital status')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
